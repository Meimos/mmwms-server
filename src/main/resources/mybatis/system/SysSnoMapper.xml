<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.meimos.project.system.mapper.SysSnoMapper">

    <resultMap id="SysSno" type="com.meimos.project.system.domain.SysSno">
        <id property="id" column="id" jdbcType="INTEGER"/>
        <result property="name" column="name" jdbcType="VARCHAR"/>
        <result property="alias" column="alias" jdbcType="VARCHAR"/>
        <result property="regulation" column="regulation" jdbcType="VARCHAR"/>
        <result property="genType" column="gen_type" jdbcType="INTEGER"/>
        <result property="noLength" column="no_length" jdbcType="INTEGER"/>
        <result property="curDate" column="cur_date" jdbcType="VARCHAR"/>
        <result property="initValue" column="init_value" jdbcType="INTEGER"/>
        <result property="curValue" column="cur_value" jdbcType="INTEGER"/>
        <result property="step" column="step" jdbcType="INTEGER"/>
    </resultMap>

    <sql id="columns">
		id,name,alias,regulation,gen_type,no_length,cur_date,init_value,cur_value,step
	</sql>

    <insert id="create" parameterType="com.meimos.project.system.domain.SysSno">
        insert into sys_sno (
        <if test="name != null and name != '' ">name,</if>
        <if test="alias != null and alias != '' ">alias,</if>
        <if test="regulation != null and regulation != '' ">regulation,</if>
        <if test="curDate != null and curDate != '' ">cur_date,</if>
        gen_type,
        no_length,
        init_value,
        cur_value,
        step
        )values(
        <if test="name != null and name != ''">#{name,jdbcType=VARCHAR},</if>
        <if test="alias != null and alias != ''">#{alias,jdbcType=VARCHAR},</if>
        <if test="regulation != null and regulation != ''">#{regulation,jdbcType=VARCHAR},</if>
        <if test="curDate != null and curDate != ''">#{curDate,jdbcType=VARCHAR},</if>
        #{genType,jdbcType=INTEGER},
        #{noLength,jdbcType=INTEGER},
        #{initValue,jdbcType=INTEGER},
        #{curValue,jdbcType=INTEGER},
        #{step,jdbcType=INTEGER}
        )
	</insert>

    <select id="getById"   parameterType="java.lang.Long" resultMap="SysSno">
		SELECT * FROM sys_sno
		WHERE
		id=#{id}
	</select>

    <update id="update" parameterType="com.meimos.project.system.domain.SysSno">
		UPDATE sys_sno SET
		name=#{name,jdbcType=VARCHAR},
		alias=#{alias,jdbcType=VARCHAR},
		regulation=#{regulation,jdbcType=VARCHAR},
		gen_type=#{genType,jdbcType=INTEGER},
		no_length=#{noLength,jdbcType=INTEGER},
		cur_date=#{curDate,jdbcType=VARCHAR},
		init_value=#{initValue,jdbcType=INTEGER},
		cur_value=#{curValue,jdbcType=INTEGER},
		step=#{step,jdbcType=INTEGER}
		WHERE
		id=#{id}
	</update>

    <!--where alias=#{alias}
		and cur_value=#{curValue} -->
    <update id="updByAlias" parameterType="com.meimos.project.system.domain.SysSno">
		update sys_sno set
		cur_date=#{curDate},
		cur_value=#{newCurValue}
		where alias=#{alias}
	</update>

    <delete id="remove" parameterType="java.lang.Long">
        DELETE FROM sys_sno where id in
        <foreach collection="array" item="userId" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>


    <select id="isAliasExisted" resultType="java.lang.Integer">
        select count(*) from sys_sno where alias=#{alias}
        <if test="id!=null"> AND id !=#{id} </if>
    </select>

    <!-- start getByAlias  -->
    <select id="getByAlias" parameterType="String" resultMap="SysSno">
        select <include refid="columns"/>
        FROM sys_sno
        WHERE
        alias=#{alias}
    </select>
    <!-- end getByAlias  -->
    <select id="selectSnoList" parameterType="com.meimos.project.system.domain.SysSno" resultMap="SysSno">
        select u.id, u.name, u.alias, u.regulation, u.gen_type, u.no_length, u.cur_date, u.init_value, u.cur_value, u.step from sys_sno u
        where 1=1
        <if test="name != null and name != ''">
            AND u.name like concat('%', #{name}, '%')
        </if>
        <if test="alias != null and alias != ''">
            AND u.alias = #{alias}
        </if>
        <if test="regulation != null and regulation != ''">
            AND u.regulation like concat('%', #{regulation}, '%')
        </if>
    </select>
</mapper>